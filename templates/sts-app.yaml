apiVersion: v1
kind: Service
metadata:
  name: {{ include "cgwi-php.fullname" . }}
  labels:
    component: app
    {{- include "cgwi-php.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    component: app
    {{- include "cgwi-php.selectorLabels" . | nindent 4 }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cgwi-php.fullname" . }}
  labels:
    component: app
    {{- include "cgwi-php.labels" . | nindent 4 }}
spec:
  replicas: 0 # set to 1 to enable
  selector:
    matchLabels:
      component: app
      {{- include "cgwi-php.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "cgwi-php.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        component: app
        {{- include "cgwi-php.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cgwi-php.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      containers:
        - name: app
          command:
            - bash
            - /srv/app/scripts/entrypoint.sh
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "cgwi-php.fullname" . }}
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-app
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-mysql
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-redis
          env:
          - name: DB_DATABASE
            value: $(MYSQL_DATABASE)
          - name: DB_USERNAME
            value: $(MYSQL_USER)
          - name: DB_PASSWORD
            value: $(MYSQL_PASSWORD)
          ports:
            - name: fpm
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
          resources:
            {{- if .Values.app_resources }}
            {{- toYaml .Values.app_resources | nindent 12 }}
            {{- else }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
        - name: nginx
          command:
            - /usr/sbin/nginx
            - -g
            - daemon off;
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
            - name: fpm-upstream
              mountPath: /etc/nginx/conf.d/_upstream-fpm.conf
              subPath: _upstream-fpm.conf
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: queue
          command:
            - bash
            - -c
            - |-
              echo "role: queue"
              echo "SESSION_DRIVER: $SESSION_DRIVER"
              echo "CACHE_DRIVER: $CACHE_DRIVER"
              echo "QUEUE_CONNECTION: $QUEUE_CONNECTION..."
              /srv/app/scripts/awaitdb.bash
              php /srv/app/artisan queue:work --verbose --tries=3 --timeout=90
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "cgwi-php.fullname" . }}
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-app
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-mysql
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-redis
          env:
          - name: DB_DATABASE
            value: $(MYSQL_DATABASE)
          - name: DB_USERNAME
            value: $(MYSQL_USER)
          - name: DB_PASSWORD
            value: $(MYSQL_PASSWORD)
          - name: APP_NAME
            value: $(APP_NAME) - queue
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: fpm-upstream
        configMap:
          name: {{ include "cgwi-php.fullname" . }}-fpm-upstream
      - name: appdata
        persistentVolumeClaim:
          claimName: appdata-{{ include "cgwi-php.fullname" . }}
